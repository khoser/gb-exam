
#- name: get-url
#  get_url:
#    url: https://repo.proxysql.com/ProxySQL/repo_pub_key
#    dest: /tmp/proxysql.key


- name: Add ProxySQL APT signing key
  apt_key:
    state: present
#    file: /tmp/proxysql.key
    url: https://repo.proxysql.com/ProxySQL/repo_pub_key
  become: true


- name: Add ProxySQL APT repository
  apt_repository:
    repo: deb http://repo.proxysql.com/ProxySQL/proxysql-2.2.x/{{ ansible_distribution_release }}/ ./
    state: present


- name: install proxysql
  apt:
    pkg:
      - proxysql
    update_cache: yes
  register: proxysql_install


#- name: Copy proxysql.cfg
#  template:
#    src: proxysql.j2
#    dest: /etc/proxysql.cnf


#- name: Init proxy
#  shell: systemctl stop proxysql


#- name: Init proxy
#  shell: systemctl start proxysql-initial


- name: start proxysql service
  systemd: state=restarted name=proxysql


- name: Wait 20 seconds after restart
  pause:
    seconds: 20


- name: proxysql_backend_servers
  proxysql_backend_servers:
    login_user: 'admin'
    login_password: 'admin'
    login_host: '127.0.0.1'
    login_port: 6032
    hostname: "{{ hostvars[item]['ansible_default_ipv4']['address']  }}"
    hostgroup_id: 0
    state: present
    load_to_runtime: yes
    save_to_disk: yes
  with_items: "{{ groups['sql'] }}"
  when: proxysql_install is changed


- name: proxysql_mysql_users
  proxysql_mysql_users:
    login_user: 'admin'
    login_password: 'admin'
    login_host: '127.0.0.1'
    login_port: 6032
    username: 'root1'
    password: '{{ mysql_root_password }}'
    frontend: yes
    backend: yes
    default_hostgroup: 0
    state: present
    load_to_runtime: yes
    save_to_disk: yes
# можно уточнить предполагаемую нагрузку
#    max_connections: 10000
# нужно почитать поглубже про это
#    transaction_persistent: false


#- name: proxysql_replication_hostgroups
#  proxysql_global_variables:
#    login_user: 'admin'
#    login_password: 'admin'
#    login_host: '127.0.0.1'
#    login_port: 6032
##    writer_hostgroup: 1
##    reader_hostgroup: 2
##    state: present
#    save_to_disk: yes


#- name: proxysql_manage_config
#  proxysql_manage_config:
#    login_user: 'admin'
#    login_password: 'admin'
#    login_host: '127.0.0.1'
#    login_port: 6032


#- name: proxysql_global_variables
#  proxysql_global_variables:
#    login_user: 'admin'
#    login_password: 'admin'
#    login_host: '127.0.0.1'
#    login_port: 6032


#  для начала нам пока ненужно (тюнинг)
#- name:  proxysql_query_rules
#   proxysql_query_rules:
#    login_user: 'admin'
#    login_password: 'admin'
#    login_host: '127.0.0.1'
#    login_port: 6032

- name: Testing cluster status by connecting to proxysql
  mysql_info:
    login_user: root1
    login_password: '{{ mysql_root_password }}'
    login_host: "{{ ansible_facts['default_ipv4']['address'] }}"
    login_port: 6033
  register: server_info
#  when: inventory_hostname == groups['sql'][0]


- name: Extract mysql-cluster nodes count
  shell: echo "{{ server_info }}" | sed 's/,/\n/g' | grep 'wsrep_cluster_size'
  register: cluster_status
#  when: inventory_hostname == groups['sql'][0]

- name: Test status
  debug:
    msg:
      - " Test connection successfull"
      - " Total number of active mysql nodes in cluster: '{{ cluster_status.stdout_lines[0] }} '"
      - " Setup Completed!"


# install proxysql exporter
- name: Download and unpack proxysql v1.1.0
  unarchive:
    src: https://github.com/percona/proxysql_exporter/releases/download/v1.1.0/proxysql_exporter-1.1.0.linux-amd64.tar.gz
    dest: "/opt"
    remote_src: yes
    creates: "/opt/proxysql_exporter/"


- name: Configure proxysql_exporter service
  copy:
    dest: /etc/systemd/system/proxysql_exporter.service
    content: |
      [Unit]
      Description=Proxysql exporter
      Wants=network-online.target
      After=network-online.target

      [Service]
      User=root
      Group=root
      Type=simple
      ExecStart=/opt/proxysql_exporter/proxysql_exporter \
        --web.listen-address=:42004
      [Install]
      WantedBy=multi-user.target


- name: Enable proxysql_exporter
  systemd:
    name: proxysql_exporter
    enabled: yes
    state: restarted
