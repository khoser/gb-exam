#!/bin/bash
# Скрипт создания архивированного каталога

# !!! Директории слешами НЕ закрывать  !!!
BACKUPDIR={{ backup_dir }}  # /etc/backup/app
# Максимально число хранимых архивов
MAXNUMBER=3
# путь к папке приложения
APPNAME=wordpress
APPPATH=/var/www/{{ domain_address }}/wordpress
# Список исключенных БД (при DBLIST="")


NOWTIME=`date '+%Y-%m-%d %H:%M'`
NOWDATE=`date '+%Y%m%d'`
DOTNAME="\.tar\.bz2"
 
# Сообщение по завершению выполнения
function end_msg() {
  echo "========== `date '+%Y-%m-%d %H:%M'` END backup-mysql =========="
  echo ""
}

function err_notify() {
  echo "backup_fail 1" | curl --data-binary @- http://{{ groups['mon'][0] }}:9091/metrics/job/archive/instance/{{ inventory_hostname }}
}

echo "========== `date '+%Y-%m-%d %H:%M'` START backup-mysql =========="
if [ ! -d "$BACKUPDIR" ]; then
  echo "Директория не верна"
  err_notify
  end_msg
  exit 0
fi


# Выполнение архивации
echo "$APPNAME"
cd /tmp/
cp -r $APPPATH ./$APPNAME || err_notify
tar -cjf $BACKUPDIR/$APPNAME.$NOWDATE$DOTNAME $APPNAME || err_notify
rm -r ./$APPNAME
echo "backup_success_$APPNAME 1" | curl --data-binary @- http://{{ groups['mon'][0] }}:9091/metrics/job/archive/instance/{{ inventory_hostname }}
############################################################

####### Контроль количества файлов ##############
FILELIST=`ls $BACKUPDIR | sed -e '/[0-9]\{8\}'$DOTNAME'$/!d'`
FILENAMES=`echo "$FILELIST" | sed -e 's/\(^.*\)\([0-9]\{8\}'$DOTNAME'$\).*/\1/g' | sort -u`
for CURRENT in $FILENAMES; do
  # Получение списка дат для текущего архива на удаление
  TEMP1=`echo "$FILELIST" | sed -e '/\(^'$CURRENT'\)\([0-9]\{8\}\)\('$DOTNAME'$\)/!d' -e 's/\(^'$CURRENT'\)\([0-9]\{8\}\)\('$DOTNAME'$\)/\2/g' | sort -rn`
  TEMP1=`echo "$TEMP1" | sed -e '1,'$MAXNUMBER'd'`
  #Склеивание
  for TEMP2 in $TEMP1; do
    DELETELIST=`echo $CURRENT$TEMP2${DOTNAME//\\\/} && echo "$DELETELIST"`
  done
  DELETELIST=`echo "$DELETELIST" | sed -e '/^$/d'`
done
if [ -n "$DELETELIST" ]; then
  echo "========== Файлы будут удалены =========="
  echo "$DELETELIST"
fi
for CURRENT in $DELETELIST; do
  rm $BACKUPDIR/$CURRENT
done

end_msg
exit 0
